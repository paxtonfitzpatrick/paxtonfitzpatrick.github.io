@keyframes fade-in-anim {
  0% { opacity: 0; }
  100% { opacity: 1; }
}

@mixin fade-in(
  $duration,          // animation-duration (Xs or Xms)
  $delay,             // animation-delay (Xs or Xms)
  $timing-func: ease  // animation-timing-function (various keywords/functions)
) {
  // element needs to start with opacity 0 so it doesn't appear during delay
  // period
  opacity: 0;
  animation: fade-in-anim $duration $timing-func $delay forwards;
}

// consistent scrollbars across browsers/user agents
@mixin styled-scrollbar(
  $size,      // width for vertical scrollbars, height for horizontal scrollbars
  $fg-color,  // scrollbar thumb color
  $bg-color   // scrollbar track color
) {
  // new CSS standard, only implemented in Gecko so far, and not fully
  // (https://caniuse.com/css-scrollbar, 6/24/22)
  //   Note: in Firefox there's currently no way to specify scrollbar width
  //   beyond `scrollbar-width: [auto|thin|none];` and also no way to always
  //   show scrollbars if user hasn't enabled it
  scrollbar-color: $fg-color $bg-color;

  // webkit/blink (Chrome, Safari, Edge, Opera)
  //   Note: starting with iOS 14, iOS Safari no longer supports custom CSS
  //   scrollbars. Desktop Safari still does as of v15.2.
  &::-webkit-scrollbar {
    // stylelint-disable-next-line property-no-vendor-prefix -- Safari didn't
    // drop vendor prefix until 2022 (https://caniuse.com/css-appearance)
    -webkit-appearance: none;
    appearance: none;
    width: $size;
    height: $size;
  }

  &::-webkit-scrollbar-thumb {
    background-color: $fg-color;
    border-radius: $size;
  }

  &::-webkit-scrollbar-track {
    background-color: $bg-color;
  }
}

@mixin multipane-fit-viewport-height(
  $pane-content-preferred-height: 40rem,  // default (unshrunk) height of scrollable tab pane content area
  $pane-content-min-height: 20rem         // min height of scrollable tab pane content area
) {
  // Allows a section with multipane or multipane-filter layout to shrink
  // vertically (if necessary) to fit within the viewport height (minus the
  // fixed-position navbar's height). If shrunk, height is taken only from the
  // scrollable tab pane content area.
  display: flex;
  height: auto;
  max-height: calc(100vh - var(--navbar-height));

  .container {
    display: flex;
    flex-direction: column;
    flex-grow: 1;
    min-height: auto;

    > .row {
      flex-shrink: 0;
    }

    > .row:has(.tab-content) {
      flex-grow: 1;
      flex-shrink: 1;
      flex-wrap: nowrap;
      min-height: $pane-content-min-height;

      > .col-12 {  // or .col, [class$='col-'] to match any bootstrap column class
        display: flex;
        flex-grow: 1;
      }
    }
  }

  .tab-content {
    display: flex;
    flex-grow: 1;
  }

  .tab-pane {
    display: none;
    flex-grow: 1;

    &.active {
      display: flex;
    }

    > div {
      flex-grow: 1;
      min-height: $pane-content-min-height;
      max-height: $pane-content-preferred-height;
      overflow-y: auto;
    }
  }
}
